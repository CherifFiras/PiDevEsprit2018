<?php

namespace MainBundle\Repository;

/**
 * AlbumRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserRepository extends \Doctrine\ORM\EntityRepository
{
    public function resultusers($gender,$occupation,$religion,$pays,$ville,$region,$films,$series,$livres)
    {
        $c = array();
        $t = array();
        $qb = $this->createQueryBuilder('u');
        if($gender != null)
            $qb->andWhere("u.genre = ':ge'")->setParameter(":ge",$gender);
        if($occupation != null)
            $qb->andWhere("u.occupation in (:oc)")->setParameter(":oc",$occupation);
        if($religion != null)
            $qb->andWhere("u.relegion in (:rel)")->setParameter(":rel",$religion);
        if($pays != null)
            $qb->andWhere("u.pays in (:ff)")->setParameter(":ff",$pays);
        if($ville != null)
            $qb->andWhere("u.ville in (:vil)")->setParameter(":vil",$ville);
        if($region != null)
            $qb->andWhere("u.region in (:re)")->setParameter(":re",$region);

        $qb->leftjoin("u.interets","i","WITH");

        if($films != null)
        {
            $c = array_merge($c,$films);
            $t = array_merge($t,array("Movie"));
        }

        if($series != null)
        {
            $c = array_merge($c,$series);
            $t = array_merge($t,array("Serie"));
        }
        if($livres != null)
        {
            $c = array_merge($c,$livres);
            $t = array_merge($t,array("Book"));
        }

        $qb->andWhere($qb->expr()->andX("i.type in (:ty)","i.contenu in (:co)"))
            ->setParameter(":ty",$t)->setParameter(":co",$c);



        return $qb->getQuery()->execute();



    }

}
